from conn_postgres import pg_conn, pg_cursor
from langchain_openai import ChatOpenAI
from config import OPENAI_API_KEY


pg_cursor.execute("SELECT id, raw_text FROM raw_texts")
rows = pg_cursor.fetchall()
texts = [row[1] for row in rows]

few_shots = """
-- Ví dụ 1
INSERT INTO products (brand, name, screen_tech, screen_size, camera, os, storage, ram, battery, price)
VALUES ('Nokia', 'Nokia 3210 4G', 'IPS', '2.4', '2', 'S30+', '128', '64', '1450', 1590000) RETURNING id;
INSERT INTO colors (product_id, color) VALUES (%s, 'Vàng');
INSERT INTO colors (product_id, color) VALUES (%s, 'Xanh');
INSERT INTO colors (product_id, color) VALUES (%s, 'Đen');

-- Ví dụ 2
INSERT INTO products (brand, name, screen_tech, screen_size, camera, os, storage, ram, battery, price)
VALUES ('Samsung', 'Samsung Galaxy A05s', 'PLS LCD', '6.7', '50', 'One UI 5.1', '128', '6', '5000', 3490000) RETURNING id;
INSERT INTO colors (product_id, color) VALUES (%s, 'Đen');
INSERT INTO colors (product_id, color) VALUES (%s, 'Xanh');
INSERT INTO colors (product_id, color) VALUES (%s, 'Bạc');

-- Ví dụ 3
INSERT INTO products (brand, name, screen_tech, screen_size, camera, os, storage, ram, battery, price)
VALUES ('Vivo', 'Vivo Y03', 'IPS LCD', '6.56', '13', 'Funtouch OS 14.0', '64', '4', '5000', 2790000) RETURNING id;
INSERT INTO colors (product_id, color) VALUES (%s, 'Đen');
INSERT INTO colors (product_id, color) VALUES (%s, 'Xanh');
"""

def build_prompt(product_text, few_shots): 
    return f"""
    Trích xuất thông tin có cấu trúc từ đoạn mô tả sản phẩm sau và sinh các câu lệnh SQL để chèn dữ liệu vào bảng PostgreSQL.

    Đoạn mô tả:
    \"\"\"{product_text}\"\"\"

    Bảng `products` có các cột:
    - brand
    - name
    - screen_tech
    - screen_size (real)
    - camera (real)
    - os
    - storage (real)
    - ram (real)
    - battery (real)
    - price 

    Bảng `colors` có:
    - product_id
    - color

    Viết trả về dạng mô tả như các mẫu sau: {few_shots}

    Các cột có kiểu là real thì chỉ được để số trong đó, nếu sai định dạng thì lấy định dạng bên dưới thay vào. Ví dụ ram = "8", os = "Adroid"

    Không được để cột nào có giá trị là Không và Đang cập nhật, nếu không có tự nghĩ ra và thay vào.
    Nếu không có giá trị của thương hiệu thì đặt brand = "Samsung", không có tên điện thoại thì đặt name = "Samsung galaxy S23",
    không có công nghệ màn hình thì đặt screen_tech = "Dynamic Amoled 2x", không có kích thước màn hình thi đặt screen_size = "6.8",
    không có độ phân giải camera thì đặt camera = "8", không có hệ điều hành thì đặt os = "Adroid",
    không có bộ nhớ trong thì đặt storage = "128", không có RAM thì đặt ram = "8",
    không có dung lượng pin thì đặt battery = "4000", không có giá thì đặt price = "29990000"

    Nếu màu sắc không có thì không cần tạo câu lệnh SQL để thêm vào bảng colors, và khi thêm giá trị màu vào chỉ lấy giá trị "Đen" thay vì lấy cả "Màu Đen"

    Trả về hai câu SQL:
    1. Câu `INSERT INTO products (...) VALUES (...);` kèm `RETURNING id`
    2. Các câu `INSERT INTO colors (product_id, color) VALUES (...);`

    Chỉ trả về mã SQL như few_shots, không viết gì thêm.
    """

# ----------- PARSE & EXECUTE ----------------
def extract_first_sql_statement(lines):
    sql = ""
    i = 0
    while i < len(lines):
        sql += lines[i] + " "
        if ";" in lines[i]:
            break
        i += 1
    return sql.strip(), i + 1  # trả về câu SQL và chỉ mục dòng tiếp theo

def insert_to_db(sql_text: str):
    # Tách các dòng không trống
    lines = [line.strip() for line in sql_text.splitlines() if line.strip()]

    # Ghép các dòng đầu tiên cho đến dấu chấm phẩy
    insert_product_sql, next_index = extract_first_sql_statement(lines)
    color_lines = lines[next_index:]

    # Chèn sản phẩm
    pg_cursor.execute(insert_product_sql)
    product_id = pg_cursor.fetchone()[0]
    print(f"✅ Inserted product ID: {product_id}")

    # Chèn màu sắc
    for line in color_lines:
        pg_cursor.execute(line, (product_id,))

    pg_conn.commit()
    print("✅ All inserts committed to DB.")


for text in texts[286:len(texts)]:
    prompt = build_prompt(text, few_shots)

    llm = ChatOpenAI(
        model="gpt-4.1-nano-2025-04-14",
        temperature=0,
        openai_api_key=OPENAI_API_KEY
    )

    sql_output = llm.invoke(prompt)
    print("== SQL GENERATED BY LLM ==\n", sql_output.content)
    insert_to_db(sql_output.content)

